
const i18n = {
    'en': {
        'homepage': 'DavidX\'s Homepage',
        'tools': 'Tools',
        'ai-chat': 'Free AI Chat',
        'ai-chat-desc': 'Chat online with LLMs for free.',
        'pastebin': 'Online Pastebin',
        'pastebin-desc': 'Share and store text online.',
        'link': 'URL Shortener',
        'link-desc': 'Shorten URLs and share them easily.',
        'monitor': 'Website Monitor',
        'monitor-desc': 'Status monitor for my websites.',
        'ping': 'Ping Test',
        'ping-desc': 'Test your network latency.',
        'mirrors': 'Mirror Sites',
        'github-acc': 'GitHub File Acceleration',
        'github-acc-desc': 'Accelerates GitHub file downloading. For study purposes only.',
        'wikipedia': 'Wikipedia',
        'wikipedia-desc': 'Mirror site of Wikipedia. For study purposes only.',
        'claude-us': 'Claude-US üá∫üá∏',
        'claude-desc': 'Use claude.ai without getting banned. For study purposes only.',
        'claude-pl': 'Claude-PL üáµüá±',
        'web': 'Web Proxy',
        'web-desc': 'Web proxy that works for many websites. For study purposes only.',
        'personal': 'Personal',
        'blog': 'Blog (International)',
        'blog-desc': 'My personal blog, written in English.',
        'blog-zh': 'Blog (Chinese)',
        'blog-zh-desc': 'My personal blog, written in Chinese.',
        'contact': 'Contact',
        'email': 'Email',
        'email-desc': 'You can send me an email for contact.',
        'github': 'GitHub',
        'github-desc': 'My GitHub account with most of my projects in it.',
        'telegram': 'Telegram',
        'telegram-desc': 'You can contact me via Telegram as well.',
        'intro': 'Hello, I\'m DavidX, a personal developer who loves coding. Welcome to my homepage! You can check out the tools I\'ve made or visit my blog. Feel free to contact me anytime!'
    },
    'zh': {
        'homepage': 'DavidXÁöÑ‰∏ªÈ°µ',
        'tools': 'Â∑•ÂÖ∑',
        'ai-chat': 'ÂÖçË¥πAIËÅäÂ§©',
        'ai-chat-desc': 'ÂÖçË¥πÁöÑAIËÅäÂ§©„ÄÇ',
        'pastebin': 'Âú®Á∫øÂâ™Ë¥¥Êùø',
        'pastebin-desc': 'Âú®Á∫øÂàÜ‰∫´ÂíåÂ≠òÂÇ®ÊñáÊú¨„ÄÇ',
        'link': 'Áü≠ÈìæÁîüÊàêÂô®',
        'link-desc': 'Áº©Áü≠URLÂπ∂ËΩªÊùæÂàÜ‰∫´„ÄÇ',
        'monitor': 'ÁΩëÁ´ôÁõëÊéß',
        'monitor-desc': 'ÁõëÊéßÊàëÁΩëÁ´ôÁöÑÁä∂ÊÄÅ„ÄÇ',
        'ping': 'PingÊµãËØïÂ∑•ÂÖ∑',
        'ping-desc': 'ÊµãËØïÊÇ®ÁöÑÁΩëÁªúÂª∂Ëøü„ÄÇ',
        "mirrors": 'ÈïúÂÉèÁΩëÁ´ô',
        'github-acc': 'GitHubÊñá‰ª∂Âä†ÈÄü',
        'github-acc-desc': 'Âä†ÈÄüGitHubÊñá‰ª∂‰∏ãËΩΩÔºå‰ªÖ‰æõÂ≠¶‰π†ÁõÆÁöÑ„ÄÇ',
        'wikipedia': 'Áª¥Âü∫ÁôæÁßë',
        'wikipedia-desc': 'Áª¥Âü∫ÁôæÁßëÈïúÂÉèÁ´ôÔºå‰ªÖ‰æõÂ≠¶‰π†ÁõÆÁöÑ„ÄÇÔºàÊáÇÂæóÈÉΩÊáÇÔºâ',
        'claude-us': 'Claude-US üá∫üá∏',
        'claude-desc': 'Á®≥ÂÆö‰ΩøÁî®claude.aiÔºåÈÅøÂÖçÂ∞ÅÂè∑Ôºå‰ªÖ‰æõÂ≠¶‰π†ÁõÆÁöÑ„ÄÇ',
        'claude-pl': 'Claude-PL üáµüá±',
        'web': 'ÁΩëÈ°µ‰ª£ÁêÜ',
        'web-desc': 'ÊîØÊåÅÂ§öÁΩëÁ´ôÁöÑÁΩëÈ°µ‰ª£ÁêÜÔºå‰ªÖ‰æõÂ≠¶‰π†ÁõÆÁöÑ„ÄÇ',
        'personal': '‰∏™‰∫∫',
        'blog': 'ÂçöÂÆ¢ÔºàÂõΩÈôÖÁâàÔºâ',
        'blog-desc': 'Ëã±ÊñáÁâàÁöÑ‰∏™‰∫∫ÂçöÂÆ¢„ÄÇ',
        'blog-zh': 'ÂçöÂÆ¢ÔºàÂõΩÂÜÖÁâàÔºâ',
        'blog-zh-desc': '‰∏≠ÊñáÁâàÁöÑ‰∏™‰∫∫ÂçöÂÆ¢„ÄÇ',
        'contact': 'ËÅîÁ≥ª',
        'email': 'ÁîµÂ≠êÈÇÆ‰ª∂',
        'email-desc': 'ÊÇ®ÂèØ‰ª•ÁªôÊàëÂèëÁîµÂ≠êÈÇÆ‰ª∂„ÄÇ',
        'github': 'GitHub',
        'github-desc': 'ÊàëÁöÑGitHubË¥¶Êà∑ÔºåÊÇ®ÂèØ‰ª•ÁúãÂà∞ÊàëÂ§ßÈÉ®ÂàÜÁöÑÈ°πÁõÆ„ÄÇ',
        'telegram': 'Telegram',
        'telegram-desc': 'ÊÇ®‰πüÂèØ‰ª•ÈÄöËøáTGÁßÅ‰ø°Êàë„ÄÇ',
        'intro': 'ÊÇ®Â•ΩÔºåÊàëÊòØDavidXÔºå‰∏ÄÂêçÁÉ≠Áà±ÁºñÁ®ãÁöÑ‰∏™‰∫∫ÂºÄÂèëËÄÖ„ÄÇÊ¨¢ËøéÊù•Âà∞ÊàëÁöÑ‰∏ªÈ°µÔºÅÊÇ®ÂèØ‰ª•Êü•ÁúãÊàëÂÅöÁöÑÂêÑÁßçÂ∑•ÂÖ∑ÔºåÊàñËÄÖËÆøÈóÆÊàëÁöÑÂçöÂÆ¢„ÄÇÂ¶ÇÊûúÊÇ®ÊÑüÂÖ¥Ë∂£ÔºåÂèØ‰ª•ÈöèÊó∂ËÅîÁ≥ªÊàëÔºÅ'
    }
};

function detectBrowserLanguage() {
    const browserLang = navigator.language || navigator.userLanguage;
    return browserLang.startsWith('zh') ? 'zh' : 'en';
}

let currentLang = localStorage.getItem('language') || detectBrowserLanguage();

function toggleLanguage() {
    currentLang = currentLang === 'zh' ? 'en' : 'zh';
    localStorage.setItem('language', currentLang);
    updateContent();
}

function updateContent() {
    document.getElementById('langBtn').textContent = currentLang === 'zh' ? 'EN' : '‰∏≠Êñá';
    document.documentElement.lang = currentLang === 'zh' ? 'zh-CN' : 'en';

    document.title = i18n[currentLang]['homepage'];

    const elements = document.querySelectorAll('[data-i18n]');
    elements.forEach(element => {
        const key = element.getAttribute('data-i18n');
        if (i18n[currentLang][key]) {
            element.textContent = i18n[currentLang][key];
        }
    });

    const typingElement = document.getElementById('typing-text');
    typeText(i18n[currentLang]['intro'], typingElement);
}

document.addEventListener('DOMContentLoaded', updateContent);

document.addEventListener('contextmenu', function (event) {
    let element = event.target;
    let isLink = false;

    while (element) {
        if (element.tagName === 'A') {
            isLink = true;
            break;
        }
        element = element.parentElement;
    }

    if (!isLink) {
        event.preventDefault();
    }
});

document.addEventListener('copy', event => event.preventDefault());
document.addEventListener('paste', event => event.preventDefault());
document.addEventListener('cut', event => event.preventDefault());
document.addEventListener('keydown', function (event) {
    if (event.keyCode === 123 ||
        (event.ctrlKey && event.shiftKey && event.keyCode === 73) ||
        (event.ctrlKey && event.keyCode === 85)) {
        event.preventDefault();
        return false;
    }
});

let typingTimer = null;

function typeText(text, element, speed = 100) {
    if (typingTimer) {
        clearTimeout(typingTimer);
    }

    let index = 0;
    element.textContent = '';

    function type() {
        if (index < text.length) {
            element.textContent += text.charAt(index);
            index++;
            typingTimer = setTimeout(type, speed);
        }
    }
    type();
}
const themeToggle = document.getElementById('themeToggle');
const root = document.documentElement;
// Ê£ÄÊµãÁ≥ªÁªü‰∏ªÈ¢ò
const systemTheme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
// ‰ºòÂÖà‰ΩøÁî®Êú¨Âú∞Â≠òÂÇ®ÁöÑ‰∏ªÈ¢ò,Â¶ÇÊûúÊ≤°ÊúâÂàô‰ΩøÁî®Á≥ªÁªü‰∏ªÈ¢ò
const savedTheme = localStorage.getItem('theme') || systemTheme;

// ÁõëÂê¨Á≥ªÁªü‰∏ªÈ¢òÂèòÂåñ
window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', e => {
    if (!localStorage.getItem('theme')) {
        // Âè™ÊúâÂú®Áî®Êà∑Ê≤°ÊúâÊâãÂä®ËÆæÁΩÆ‰∏ªÈ¢òÊó∂ÊâçË∑üÈöèÁ≥ªÁªü
        const newTheme = e.matches ? 'dark' : 'light';
        document.documentElement.setAttribute('data-theme', newTheme);
    }
});

root.setAttribute('data-theme', savedTheme);

themeToggle.addEventListener('click', () => {
    const currentTheme = root.getAttribute('data-theme');
    const newTheme = currentTheme === 'light' ? 'dark' : 'light';
    themeToggle.textContent = newTheme === 'dark' ? '‚òÄÔ∏è' : 'üåô';
    root.setAttribute('data-theme', newTheme);
    localStorage.setItem('theme', newTheme);
});